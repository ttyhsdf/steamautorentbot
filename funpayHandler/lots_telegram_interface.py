"""
Telegram –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–æ—Ç–∞–º–∏ FunPay
"""

import asyncio
from datetime import datetime
from typing import Dict, List

import telebot
from telebot.types import InlineKeyboardButton, InlineKeyboardMarkup

from funpayHandler.lots_manager import LotsManager
from logger import logger


class LotsTelegramInterface:
    """Telegram –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–æ—Ç–∞–º–∏"""
    
    def __init__(self, bot: telebot.TeleBot, lots_manager: LotsManager):
        self.bot = bot
        self.lots_manager = lots_manager
        self._register_handlers()
    
    def _register_handlers(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥"""
        
        @self.bot.callback_query_handler(func=lambda call: call.data.startswith('lots_'))
        def handle_lots_callback(call):
            """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–æ–≤ –¥–ª—è –ª–æ—Ç–æ–≤"""
            try:
                data = call.data
                
                if data == 'lots_menu':
                    self._show_lots_menu(call)
                elif data == 'lots_stats':
                    self._show_lots_stats(call)
                elif data == 'lots_raise':
                    self._raise_lots(call)
                elif data == 'lots_auto_raise_start':
                    self._start_auto_raise(call)
                elif data == 'lots_auto_raise_stop':
                    self._stop_auto_raise(call)
                elif data == 'lots_raise_status':
                    self._show_raise_status(call)
                elif data == 'lots_auto_raise_menu':
                    self._show_auto_raise_menu(call)
                elif data == 'lots_refresh':
                    self._refresh_lots_data(call)
                elif data == 'lots_back':
                    self._show_lots_menu(call)
                    
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback –¥–ª—è –ª–æ—Ç–æ–≤: {e}")
                self.bot.answer_callback_query(call.id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")
    
    def _show_lots_menu(self, call):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ª–æ—Ç–æ–≤"""
        try:
            keyboard = InlineKeyboardMarkup()
            keyboard.row(
                InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ª–æ—Ç–æ–≤", callback_data='lots_stats'),
                InlineKeyboardButton("üöÄ –ü–æ–¥–Ω—è—Ç—å –ª–æ—Ç—ã", callback_data='lots_raise')
            )
            keyboard.row(
                InlineKeyboardButton("üîÑ –°—Ç–∞—Ç—É—Å –ø–æ–¥–Ω—è—Ç–∏—è", callback_data='lots_raise_status'),
                InlineKeyboardButton("‚öôÔ∏è –ê–≤—Ç–æ–ø–æ–¥–Ω—è—Ç–∏–µ", callback_data='lots_auto_raise_menu')
            )
            keyboard.row(
                InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data='lots_refresh')
            )
            
            text = "üè™ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–æ—Ç–∞–º–∏ FunPay</b>\n\n"
            text += "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç
            try:
                self.bot.edit_message_text(
                    text,
                    call.message.chat.id,
                    call.message.message_id,
                    reply_markup=keyboard,
                    parse_mode='HTML'
                )
            except Exception as edit_error:
                if "message is not modified" in str(edit_error):
                    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback
                    self.bot.answer_callback_query(call.id, "‚úÖ –ú–µ–Ω—é –∞–∫—Ç—É–∞–ª—å–Ω–æ")
                else:
                    raise edit_error
            
            self.bot.answer_callback_query(call.id)
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –º–µ–Ω—é –ª–æ—Ç–æ–≤: {e}")
            self.bot.answer_callback_query(call.id, "‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –º–µ–Ω—é")
    
    def _show_lots_stats(self, call):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ª–æ—Ç–æ–≤"""
        try:
            self.bot.answer_callback_query(call.id, "üìä –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...")
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ª–æ—Ç–∞—Ö
            lots_data = self.lots_manager.get_lots_summary()
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            text = self.lots_manager.format_lots_display(lots_data)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
            keyboard = InlineKeyboardMarkup()
            keyboard.row(
                InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data='lots_stats'),
                InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='lots_menu')
            )
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç
            try:
                self.bot.edit_message_text(
                    text,
                    call.message.chat.id,
                    call.message.message_id,
                    reply_markup=keyboard,
                    parse_mode='HTML'
                )
            except Exception as edit_error:
                if "message is not modified" in str(edit_error):
                    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback
                    self.bot.answer_callback_query(call.id, "‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞")
                else:
                    raise edit_error
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ª–æ—Ç–æ–≤: {e}")
            self.bot.answer_callback_query(call.id, "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
    
    def _raise_lots(self, call):
        """–ü–æ–¥–Ω–∏–º–∞–µ—Ç –ª–æ—Ç—ã"""
        try:
            self.bot.answer_callback_query(call.id, "üöÄ –ü–æ–¥–Ω–∏–º–∞–µ–º –ª–æ—Ç—ã...")
            
            # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
            status = self.lots_manager.get_raise_status()
            
            if not status.get('can_raise_now', True):
                # –ï—Å—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                text = "‚è≥ <b>–õ–æ—Ç—ã —É–∂–µ –±—ã–ª–∏ –ø–æ–¥–Ω—è—Ç—ã –Ω–µ–¥–∞–≤–Ω–æ</b>\n\n"
                text += "üö´ <b>–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:</b>\n"
                for blocked in status.get('blocked_categories', []):
                    text += f"‚Ä¢ ID {blocked['category_id']}: <code>—á–µ—Ä–µ–∑ {blocked['wait_time']}</code>\n"
                text += "\nüí° <b>–ü–æ–¥—Å–∫–∞–∑–∫–∞:</b> –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∏–ª–∏ –≤–∫–ª—é—á–∏—Ç–µ –∞–≤—Ç–æ–ø–æ–¥–Ω—è—Ç–∏–µ"
            else:
                # –ü–æ–¥–Ω–∏–º–∞–µ–º –ª–æ—Ç—ã
                result = self.lots_manager.raise_lots()
                
                if result['success']:
                    text = "‚úÖ <b>–õ–æ—Ç—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–Ω—è—Ç—ã!</b>\n\n"
                    
                    if result['raised_categories']:
                        text += f"üìà <b>–ü–æ–¥–Ω—è—Ç—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:</b>\n"
                        for category in result['raised_categories']:
                            text += f"‚Ä¢ {category}\n"
                        text += "\n"
                    
                    if result['errors']:
                        text += f"‚ö†Ô∏è <b>–û—à–∏–±–∫–∏:</b>\n"
                        for error in result['errors']:
                            text += f"‚Ä¢ {error}\n"
                        text += "\n"
                    
                    next_raise = datetime.fromisoformat(result['next_raise_time'])
                    text += f"‚è∞ <b>–°–ª–µ–¥—É—é—â–µ–µ –ø–æ–¥–Ω—è—Ç–∏–µ:</b> <code>{next_raise.strftime('%d.%m.%Y %H:%M:%S')}</code>"
                else:
                    text = "‚ùå <b>–û—à–∏–±–∫–∞ –ø–æ–¥–Ω—è—Ç–∏—è –ª–æ—Ç–æ–≤</b>\n\n"
                    text += f"<b>–û—à–∏–±–∫–∞:</b> {result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}\n"
                    
                    if result.get('errors'):
                        text += f"\n<b>–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–æ–∫:</b>\n"
                        for error in result['errors']:
                            text += f"‚Ä¢ {error}\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
            keyboard = InlineKeyboardMarkup()
            keyboard.row(
                InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data='lots_raise'),
                InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='lots_menu')
            )
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç
            try:
                self.bot.edit_message_text(
                    text,
                    call.message.chat.id,
                    call.message.message_id,
                    reply_markup=keyboard,
                    parse_mode='HTML'
                )
            except Exception as edit_error:
                if "message is not modified" in str(edit_error):
                    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback
                    self.bot.answer_callback_query(call.id, "‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–∫—Ç—É–∞–ª–µ–Ω")
                else:
                    raise edit_error
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–Ω—è—Ç–∏—è –ª–æ—Ç–æ–≤: {e}")
            self.bot.answer_callback_query(call.id, "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–Ω—è—Ç–∏—è –ª–æ—Ç–æ–≤")
    
    def _show_raise_status(self, call):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –ø–æ–¥–Ω—è—Ç–∏—è –ª–æ—Ç–æ–≤"""
        try:
            self.bot.answer_callback_query(call.id, "üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç—É—Å...")
            
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å
            status = self.lots_manager.get_raise_status()
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            text = self.lots_manager.format_raise_status(status)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
            keyboard = InlineKeyboardMarkup()
            keyboard.row(
                InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data='lots_raise_status'),
                InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='lots_menu')
            )
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç
            try:
                self.bot.edit_message_text(
                    text,
                    call.message.chat.id,
                    call.message.message_id,
                    reply_markup=keyboard,
                    parse_mode='HTML'
                )
            except Exception as edit_error:
                if "message is not modified" in str(edit_error):
                    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback
                    self.bot.answer_callback_query(call.id, "‚úÖ –°—Ç–∞—Ç—É—Å –∞–∫—Ç—É–∞–ª–µ–Ω")
                else:
                    raise edit_error
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–Ω—è—Ç–∏—è: {e}")
            self.bot.answer_callback_query(call.id, "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç—É—Å–∞")
    
    def _show_auto_raise_menu(self, call):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞–≤—Ç–æ–ø–æ–¥–Ω—è—Ç–∏—è"""
        try:
            self.bot.answer_callback_query(call.id, "‚öôÔ∏è –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...")
            
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–ø–æ–¥–Ω—è—Ç–∏—è
            status = self.lots_manager.get_raise_status()
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –º–µ–Ω—é
            text = "‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–ø–æ–¥–Ω—è—Ç–∏—è</b>\n\n"
            
            if status.get('auto_raise_enabled'):
                text += "üü¢ <b>–°—Ç–∞—Ç—É—Å:</b> –í–∫–ª—é—á–µ–Ω–æ\n"
                next_raise = datetime.fromisoformat(status.get('next_raise_time', datetime.now().isoformat()))
                now = datetime.now()
                
                if next_raise > now:
                    time_diff = next_raise - now
                    hours, remainder = divmod(time_diff.total_seconds(), 3600)
                    minutes, _ = divmod(remainder, 60)
                    
                    if hours > 0:
                        text += f"‚è≥ <b>–î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–æ–¥–Ω—è—Ç–∏—è:</b> <code>{int(hours)}—á {int(minutes)}–º</code>\n"
                    else:
                        text += f"‚è≥ <b>–î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–æ–¥–Ω—è—Ç–∏—è:</b> <code>{int(minutes)} –º–∏–Ω—É—Ç</code>\n"
                else:
                    text += "üîÑ <b>–ì–æ—Ç–æ–≤–æ –∫ –ø–æ–¥–Ω—è—Ç–∏—é!</b>\n"
            else:
                text += "üî¥ <b>–°—Ç–∞—Ç—É—Å:</b> –í—ã–∫–ª—é—á–µ–Ω–æ\n"
                text += "üí° <b>–ü–æ–¥—Å–∫–∞–∑–∫–∞:</b> –í–∫–ª—é—á–∏—Ç–µ –∞–≤—Ç–æ–ø–æ–¥–Ω—è—Ç–∏–µ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–¥–Ω—è—Ç–∏—è –ª–æ—Ç–æ–≤\n"
            
            text += f"üîÑ <b>–ò–Ω—Ç–µ—Ä–≤–∞–ª:</b> <code>{status.get('raise_interval_hours', 4)} —á–∞—Å–æ–≤</code>\n\n"
            text += "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
            keyboard = InlineKeyboardMarkup()
            
            if status.get('auto_raise_enabled'):
                keyboard.row(
                    InlineKeyboardButton("üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", callback_data='lots_auto_raise_stop'),
                    InlineKeyboardButton("üìä –°—Ç–∞—Ç—É—Å", callback_data='lots_raise_status')
                )
            else:
                keyboard.row(
                    InlineKeyboardButton("‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å", callback_data='lots_auto_raise_start'),
                    InlineKeyboardButton("üìä –°—Ç–∞—Ç—É—Å", callback_data='lots_raise_status')
                )
            
            keyboard.row(
                InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='lots_menu')
            )
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç
            try:
                self.bot.edit_message_text(
                    text,
                    call.message.chat.id,
                    call.message.message_id,
                    reply_markup=keyboard,
                    parse_mode='HTML'
                )
            except Exception as edit_error:
                if "message is not modified" in str(edit_error):
                    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback
                    self.bot.answer_callback_query(call.id, "‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã")
                else:
                    raise edit_error
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –º–µ–Ω—é –∞–≤—Ç–æ–ø–æ–¥–Ω—è—Ç–∏—è: {e}")
            self.bot.answer_callback_query(call.id, "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫")
    
    def _start_auto_raise(self, call):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∞–≤—Ç–æ–ø–æ–¥–Ω—è—Ç–∏–µ –ª–æ—Ç–æ–≤"""
        try:
            self.bot.answer_callback_query(call.id, "üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–ø–æ–¥–Ω—è—Ç–∏–µ...")
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–ø–æ–¥–Ω—è—Ç–∏–µ —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º 4 —á–∞—Å–∞
            self.lots_manager.start_auto_raise(4)
            
            # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞
            status = self.lots_manager.get_raise_status()
            next_raise = datetime.fromisoformat(status.get('next_raise_time', datetime.now().isoformat()))
            now = datetime.now()
            
            text = "‚úÖ <b>–ê–≤—Ç–æ–ø–æ–¥–Ω—è—Ç–∏–µ –ª–æ—Ç–æ–≤ –∑–∞–ø—É—â–µ–Ω–æ!</b>\n\n"
            text += "üîÑ <b>–ò–Ω—Ç–µ—Ä–≤–∞–ª:</b> 4 —á–∞—Å–∞\n"
            text += "üîÑ <b>–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è:</b> –ê–∫—Ç–∏–≤–Ω–∞ —Å FunPay\n"
            
            if next_raise > now:
                time_diff = next_raise - now
                hours, remainder = divmod(time_diff.total_seconds(), 3600)
                minutes, _ = divmod(remainder, 60)
                
                if hours > 0:
                    text += f"‚è∞ <b>–°–ª–µ–¥—É—é—â–µ–µ –ø–æ–¥–Ω—è—Ç–∏–µ:</b> —á–µ—Ä–µ–∑ {int(hours)}—á {int(minutes)}–º\n"
                else:
                    text += f"‚è∞ <b>–°–ª–µ–¥—É—é—â–µ–µ –ø–æ–¥–Ω—è—Ç–∏–µ:</b> —á–µ—Ä–µ–∑ {int(minutes)} –º–∏–Ω—É—Ç\n"
                
                text += f"üïê <b>–í—Ä–µ–º—è –ø–æ–¥–Ω—è—Ç–∏—è:</b> {next_raise.strftime('%d.%m.%Y %H:%M:%S')}\n"
            else:
                text += "üîÑ <b>–ì–æ—Ç–æ–≤–æ –∫ –ø–æ–¥–Ω—è—Ç–∏—é!</b>\n"
            
            text += "\nüí° –ê–≤—Ç–æ–ø–æ–¥–Ω—è—Ç–∏–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
            keyboard = InlineKeyboardMarkup()
            keyboard.row(
                InlineKeyboardButton("üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", callback_data='lots_auto_raise_stop'),
                InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='lots_menu')
            )
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç
            try:
                self.bot.edit_message_text(
                    text,
                    call.message.chat.id,
                    call.message.message_id,
                    reply_markup=keyboard,
                    parse_mode='HTML'
                )
            except Exception as edit_error:
                if "message is not modified" in str(edit_error):
                    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback
                    self.bot.answer_callback_query(call.id, "‚úÖ –ê–≤—Ç–æ–ø–æ–¥–Ω—è—Ç–∏–µ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–æ")
                else:
                    raise edit_error
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∞–≤—Ç–æ–ø–æ–¥–Ω—è—Ç–∏—è: {e}")
            self.bot.answer_callback_query(call.id, "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∞–≤—Ç–æ–ø–æ–¥–Ω—è—Ç–∏—è")
    
    def _stop_auto_raise(self, call):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∞–≤—Ç–æ–ø–æ–¥–Ω—è—Ç–∏–µ –ª–æ—Ç–æ–≤"""
        try:
            self.bot.answer_callback_query(call.id, "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ–ø–æ–¥–Ω—è—Ç–∏–µ...")
            
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ–ø–æ–¥–Ω—è—Ç–∏–µ
            self.lots_manager.stop_auto_raise()
            
            text = "üõë <b>–ê–≤—Ç–æ–ø–æ–¥–Ω—è—Ç–∏–µ –ª–æ—Ç–æ–≤ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!</b>\n\n"
            text += "üí° –î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É \"–ó–∞–ø—É—Å—Ç–∏—Ç—å\""
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
            keyboard = InlineKeyboardMarkup()
            keyboard.row(
                InlineKeyboardButton("‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å", callback_data='lots_auto_raise_start'),
                InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='lots_menu')
            )
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç
            try:
                self.bot.edit_message_text(
                    text,
                    call.message.chat.id,
                    call.message.message_id,
                    reply_markup=keyboard,
                    parse_mode='HTML'
                )
            except Exception as edit_error:
                if "message is not modified" in str(edit_error):
                    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback
                    self.bot.answer_callback_query(call.id, "‚úÖ –ê–≤—Ç–æ–ø–æ–¥–Ω—è—Ç–∏–µ —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
                else:
                    raise edit_error
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞–≤—Ç–æ–ø–æ–¥–Ω—è—Ç–∏—è: {e}")
            self.bot.answer_callback_query(call.id, "‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞–≤—Ç–æ–ø–æ–¥–Ω—è—Ç–∏—è")
    
    def _refresh_lots_data(self, call):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –ª–æ—Ç–∞—Ö"""
        try:
            self.bot.answer_callback_query(call.id, "üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ...")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
            lots_data = self.lots_manager.get_lots_summary()
            text = self.lots_manager.format_lots_display(lots_data)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
            keyboard = InlineKeyboardMarkup()
            keyboard.row(
                InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data='lots_refresh'),
                InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='lots_menu')
            )
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç
            try:
                self.bot.edit_message_text(
                    text,
                    call.message.chat.id,
                    call.message.message_id,
                    reply_markup=keyboard,
                    parse_mode='HTML'
                )
            except Exception as edit_error:
                if "message is not modified" in str(edit_error):
                    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback
                    self.bot.answer_callback_query(call.id, "‚úÖ –î–∞–Ω–Ω—ã–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã")
                else:
                    raise edit_error
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ª–æ—Ç–æ–≤: {e}")
            self.bot.answer_callback_query(call.id, "‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö")
    
    def show_lots_menu(self, chat_id: int, message_id: int = None):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –ª–æ—Ç–æ–≤ –≤ —á–∞—Ç–µ"""
        try:
            keyboard = InlineKeyboardMarkup()
            keyboard.row(
                InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ª–æ—Ç–æ–≤", callback_data='lots_stats'),
                InlineKeyboardButton("üöÄ –ü–æ–¥–Ω—è—Ç—å –ª–æ—Ç—ã", callback_data='lots_raise')
            )
            keyboard.row(
                InlineKeyboardButton("üîÑ –°—Ç–∞—Ç—É—Å –ø–æ–¥–Ω—è—Ç–∏—è", callback_data='lots_raise_status'),
                InlineKeyboardButton("‚öôÔ∏è –ê–≤—Ç–æ–ø–æ–¥–Ω—è—Ç–∏–µ", callback_data='lots_auto_raise_menu')
            )
            keyboard.row(
                InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data='lots_refresh')
            )
            
            text = "üè™ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–æ—Ç–∞–º–∏ FunPay</b>\n\n"
            text += "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
            
            if message_id:
                self.bot.edit_message_text(
                    text,
                    chat_id,
                    message_id,
                    reply_markup=keyboard,
                    parse_mode='HTML'
                )
            else:
                self.bot.send_message(
                    chat_id,
                    text,
                    reply_markup=keyboard,
                    parse_mode='HTML'
                )
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –º–µ–Ω—é –ª–æ—Ç–æ–≤: {e}")
    
    def get_lots_menu_keyboard(self) -> InlineKeyboardMarkup:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –º–µ–Ω—é –ª–æ—Ç–æ–≤"""
        keyboard = InlineKeyboardMarkup()
        keyboard.row(
            InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ª–æ—Ç–æ–≤", callback_data='lots_stats'),
            InlineKeyboardButton("üöÄ –ü–æ–¥–Ω—è—Ç—å –ª–æ—Ç—ã", callback_data='lots_raise')
        )
        keyboard.row(
            InlineKeyboardButton("üîÑ –°—Ç–∞—Ç—É—Å –ø–æ–¥–Ω—è—Ç–∏—è", callback_data='lots_raise_status'),
            InlineKeyboardButton("‚öôÔ∏è –ê–≤—Ç–æ–ø–æ–¥–Ω—è—Ç–∏–µ", callback_data='lots_auto_raise_menu')
        )
        keyboard.row(
            InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data='lots_refresh')
        )
        keyboard.row(
            InlineKeyboardButton("‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='back_to_main')
        )
        return keyboard
