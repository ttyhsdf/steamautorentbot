#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üìù –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —à–∞–±–ª–æ–Ω–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è FunPay
–¢–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–∞ –±–µ–∑ –ª–∏—à–Ω–∏—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
"""

from typing import Dict, Any
from datetime import datetime

class MessageTemplates:
    """–ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞–º–∏ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    
    def __init__(self):
        self.templates = self._load_templates()
    
    def _load_templates(self) -> Dict[str, str]:
        """–ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö —à–∞–±–ª–æ–Ω–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π"""
        return {
            # –û—Å–Ω–æ–≤–Ω–æ–π —à–∞–±–ª–æ–Ω –¥–ª—è –∑–∞–∫–∞–∑–æ–≤ - —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–∞
            "order_data": """üéÆ **–î–ê–ù–ù–´–ï –ê–ö–ö–ê–£–ù–¢–ê STEAM**

üë§ **–õ–æ–≥–∏–Ω:** `{login}`
üîë **–ü–∞—Ä–æ–ª—å:** `{password}`
üîê **Steam Guard –∫–æ–¥:** `{steam_guard_code}`

‚è± **–°—Ä–æ–∫ –∞—Ä–µ–Ω–¥—ã:** {rental_duration} —á–∞—Å–æ–≤
üìÖ **–ù–∞—á–∞–ª–æ:** {start_time}

‚ö†Ô∏è **–ü—Ä–∞–≤–∏–ª–∞:**
‚Ä¢ –ù–ï –º–µ–Ω—è–π—Ç–µ –ø–∞—Ä–æ–ª—å
‚Ä¢ –ù–ï –¥–æ–±–∞–≤–ª—è–π—Ç–µ –¥—Ä—É–∑–µ–π
‚Ä¢ –ü–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–∞—Ä–æ–ª—å –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–µ–Ω

‚≠ê **–ó–∞ –æ—Ç–∑—ã–≤ –ø–æ–ª—É—á–∏—Ç–µ +{bonus_hours} —á–∞—Å –±–æ–Ω—É—Å–∞!**

–£–¥–∞—á–Ω–æ–π –∏–≥—Ä—ã! üéØ""",

            # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –±–æ–Ω—É—Å–µ –∑–∞ –æ—Ç–∑—ã–≤
            "bonus_activated": """üéâ **–ë–û–ù–£–° –ê–ö–¢–ò–í–ò–†–û–í–ê–ù!**

‚≠ê **–í–∞—à –æ—Ç–∑—ã–≤ –ø—Ä–∏–Ω—è—Ç!**

üéÅ **–ü–æ–ª—É—á–µ–Ω–æ:**
‚Ä¢ +{bonus_hours} —á–∞—Å–æ–≤ –±–æ–Ω—É—Å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
‚Ä¢ –°–∫–∏–¥–∫–∞ 10% –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –∞—Ä–µ–Ω–¥—É

üí≥ **–ë–æ–Ω—É—Å–Ω–æ–µ –≤—Ä–µ–º—è:** {bonus_time}

–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤! üôè"""
        }
    
    def get_template(self, template_name: str) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å —à–∞–±–ª–æ–Ω –ø–æ –∏–º–µ–Ω–∏"""
        return self.templates.get(template_name, "")
    
    def format_template(self, template_name: str, **kwargs) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å —à–∞–±–ª–æ–Ω —Å –¥–∞–Ω–Ω—ã–º–∏"""
        template = self.get_template(template_name)
        if not template:
            return ""
        
        try:
            return template.format(**kwargs)
        except KeyError as e:
            return f"–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–∞ {template_name}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä {e}"
    
    def get_all_templates(self) -> Dict[str, str]:
        """–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —à–∞–±–ª–æ–Ω—ã"""
        return self.templates
    
    def add_template(self, name: str, template: str) -> bool:
        """–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —à–∞–±–ª–æ–Ω"""
        try:
            self.templates[name] = template
            return True
        except Exception:
            return False
    
    def update_template(self, name: str, template: str) -> bool:
        """–û–±–Ω–æ–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —à–∞–±–ª–æ–Ω"""
        if name in self.templates:
            self.templates[name] = template
            return True
        return False

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
message_templates = MessageTemplates()

def get_message_template(template_name: str, **kwargs) -> str:
    """–£–¥–æ–±–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞"""
    return message_templates.format_template(template_name, **kwargs)